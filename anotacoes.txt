URL da aplicacao: https://restapi.wcaquino.me/ola

-> Testando API Rest com REST-Assured

** Ferramentas
- Java
- Eclipse
- Maven
- Windows

** Documentacao
- sobre os status code [ https://developer.mozilla.org/pt-BR/docs/Web/HTTP/Status ]
- hamcrest [ http://hamcrest.org/JavaHamcrest/javadoc/1.3/org/hamcrest/Matchers.html ]

 
** Anotações:

- requisito do rest assured é ter pelo menos o java 8

- divisao da url: http://restapi.wcaquino.me:8080/ola (pode ir sem a porta)

http:// -> protocolo da requisicao

restapi.wcaquino.me -> endereço

:8080 -> porta

/ola - recurso

porta padrão HTTP - :80
porta padrão HTTPS - :443


- Teste com junit precisa ter acima do metodo a tag @Test, deve ser publico, não pode retornar nada

	@Test
	public void testeOlaMundo() {
		
	}


- Falha no junit é quando vem de um assertion - falha de varificacao
executa o teste mas da errado o resultado final

- Erro é qualuqer outra coisa fora de lugar
não consegue executar o teste


- Atalho do eclipse para import statico é ctrl+shift+m


- Quando o json possui uma lista na raiz, para acessar os atributos pode ser colocando um $ no começo do body (ex: .body("$", ...)) ou pode deixar
em branco e colocar o atributo que quer acessar (ex: .body("name", ...)), desse jeito, vai retornar todos os atributos que tiver na lista do
que foi colocado para pesquisa


.body("age.findAll{it <= 25}.size()", is(2))

Aqui ele vai buscar todos os elementos que tem com age
vai pegar todos os que possuem a condicao do it, no caso, menos ou igual a 25


o retorno do extract(), fica armaenado no given
